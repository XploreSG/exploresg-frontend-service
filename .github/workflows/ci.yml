name: "CI Frontend - Build, Test & Security Scan"

on:
  push:
    branches:
      - main
      - "feature/**"
      - "hotfix/**"
      - "snyk*"
      - "snyk-**"
  pull_request:
    branches:
      - "snyk*"
      - "snyk-**"
  #
  #     - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "20"

jobs:
  setup:
    name: üìê Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install Dependencies
        run: npm ci

  lint:
    name: üß™ Lint Code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Lint
        run: npm run lint || true

  unit-test:
    name: üß™ Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Tests
        run: npm run test || true
      - name: Run Coverage
        run: npm run test:coverage || true
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  build:
    name: üèóÔ∏è Build Frontend
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build:prod
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  docker-build:
    name: üê≥ Docker Build (no push)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache buildx layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile*','**/package-lock.json','**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build image (no push)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          tags: exploresg-frontend:ci
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  npm-audit:
    name: üîê SCA - npm Audit
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm ci --prefer-offline --no-audit
      - name: Run npm audit
        run: npm audit --json > npm-audit.json || true
      - name: Log High Severity
        run: |
          if grep -q '"severity":"high"' npm-audit.json; then
            echo "‚ö†Ô∏è High severity vulnerabilities found in npm audit"
            grep '"severity":"high"' npm-audit.json || true
          fi
      - name: Upload Audit Report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit.json
          retention-days: 7

  owasp-sca:
    name: üîê SCA - OWASP Dependency Check
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache Dependency-Check DB
        uses: actions/cache@v3
        with:
          path: ~/.dependency-check
          key: dependency-check-db
      - name: Download Dependency-Check CLI
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.2.0/dependency-check-7.2.0-release.zip
          unzip -q dependency-check-7.2.0-release.zip
      - name: Run Dependency-Check
        run: |
          dependency-check/bin/dependency-check.sh \
            --project "exploresg-frontend-service" \
            --scan ./src ./package.json ./package-lock.json \
            --format XML \
            --out odc-report.xml \
            --noupdate | tee ODC-report.log || true
      - name: Log CRITICAL Vulnerabilities
        run: |
          if grep -q "CRITICAL" ./ODC-report.log; then
            echo "‚ö†Ô∏è CRITICAL vulnerabilities found ‚Äî see ODC-report.log"
            grep "CRITICAL" ./ODC-report.log || true
          else
            echo "‚úÖ No CRITICAL vulnerabilities found"
          fi
      - name: Upload OWASP Report
        uses: actions/upload-artifact@v4
        with:
          name: owasp-report
          path: |
            ODC-report.log
            odc-report.xml
          retention-days: 7

  codeql-sast:
    name: ‚ò¢Ô∏è SAST - CodeQL
    runs-on: ubuntu-latest
    needs: [lint, unit-test, build]
    permissions:
      actions: read
      contents: read
      security-events: write
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Init CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Analyze
        uses: github/codeql-action/analyze@v3

  dast-zap:
    name: ‚ò£Ô∏è DAST - OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: [npm-audit, owasp-sca, codeql-sast]
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build:prod
      - name: Start Preview
        run: |
          nohup npm run preview -- --port 4173 & sleep 10
          curl -I http://localhost:4173 || true
      - name: Run ZAP Baseline
        run: |
          docker run --network host \
            --user root \
            -v "${{ github.workspace }}:/zap/wrk/:rw" \
            -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://localhost:4173 \
            -g gen.conf \
            -r zap_baseline_report.html || echo "‚ö†Ô∏è ZAP scan failed but continuing"
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_baseline_report.html
